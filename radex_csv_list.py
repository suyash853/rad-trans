# -*- coding: utf-8 -*-
"""radex_csv_list.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hSjL986mcQWHls_ziu777OnW2mWjR5mo
"""

import os
import time
import numpy as np
import pandas as pd

#arrays to set loop over parameters' values
t_array= np.array([50,100,150,200,250,300])
n_array= np.array([1e4,5e4,1e5,5e5,1e6,5e6,1e7,5e7,1e8])
cdmol_array= np.array([1e14,5e14,1e15,5e15,1e16,5e16,1e17])
mole='oatom'




# Parameters to keep constant
#
tbg   = 2.73 # background radiation temperature
dv    = 1.0  # line width (km/s)
#
# Numerical parameters
#

bw    = 0.001 # "bandwidth": free spectral range around line
#
# No user changes needed below this point.

act = [2060.0,4744.7,'h.csv','H']



def write_input(infile,tkin,nh2,cdmol,partner='H2'):
    infile.write(mole+'.dat\n')
    infile.write('radex.out\n')
    if f1<f2:
        infile.write(str(f1*(1-bw))+' '+str(f2/(1-bw))+'\n')
    else:     
        infile.write(str(f2*(1-bw))+' '+str(f1/(1-bw))+'\n')
    infile.write(str(tkin)+'\n')
    infile.write('1\n')
    infile.write(partner+'\n')
    infile.write(str(nh2)+'\n')
    infile.write(str(tbg)+'\n')
    infile.write(str(cdmol)+'\n')
    infile.write(str(dv)+'\n')

def read_radex(outfile):
    line  = outfile.readline()
    words = line.split()
    while (words[1] != "T(kin)"):
        line  = outfile.readline()
        words = line.split()
    temp  = float(words[-1])
    line  = outfile.readline()
    line  = outfile.readline()
    words = line.split()
    dens  = float(words[-1])
    while (words[-1] != "FLUX"):
        line  = outfile.readline()
        words = line.split()
    line  = outfile.readline()
    line  = outfile.readline()
    words = line.split()
    ftmp  = float(words[4])
    while ((ftmp < f2*(1-bw)) or (ftmp > f2/(1-bw))):
        line  = outfile.readline()
        words = line.split()
        ftmp  = float(words[4])
    low   = float(words[-2])
    line  = outfile.readline()
    words = line.split()
    ftmp  = float(words[4])
    while ((ftmp < f1*(1-bw)) or (ftmp > f1/(1-bw))):
        line  = outfile.readline()
        words = line.split()
        ftmp  = float(words[4])
    upp   = float(words[-2])
    return (temp,dens,low,upp)

# Begin of main program

start = time.time()


f1 = act[0]
f2 = act[1]
gfil = act[2]
partner=act[3]
infile = open('radex.inp','w')
print ("Starting "+gfil)

for temp in t_array:
    for dens in n_array:
        for cdmol in cdmol_array:

            write_input(infile,temp,dens,cdmol,partner)
            if (temp == t_array[-1] and dens == n_array[-1] and cdmol==cdmol_array[-1]):
                infile.write('0\n')
                infile.close()
            else:
                infile.write('1\n')
               
    
            
os.system('radex < radex.inp')
  
outfile  = open('radex.out')

data={}
iteration=0
   
for temp in t_array:
    for dens in n_array:
        for cdmol in cdmol_array:

            a = read_radex(outfile)
            
            iteration +=1
                  
            data[str(iteration)]={'T kin(K)':a[0], 'Column_densities(cm^-2)':cdmol, 
                                          'Partner Density(cm^-3': dens,
                                          'I_2.06THz':a[3],
                                          'I_4.74THz': a[2]}
    
outfile.close()


df= pd.DataFrame(data=data).T  
df=df.sort_values(['T kin(K)','Column_densities(cm^-2)','Partner Density(cm^-3'])
df.to_csv(gfil)


stop = time.time()
dure = stop - start
print ("Run time = ",dure, "seconds")